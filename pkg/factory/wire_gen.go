// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package factory

import (
	"github.com/danielkrainas/sake/pkg/service"
)

// Injectors from wire.go:

func Coordinator(ctx RootContext, config *service.Config) (service.CoordinatorService, error) {
	context, err := InitializeLoggingContext(ctx, config)
	if err != nil {
		return nil, err
	}
	hubConnector, err := InitializeHub(context, config)
	if err != nil {
		return nil, err
	}
	storageService, err := InitializeStorage(context, config)
	if err != nil {
		return nil, err
	}
	cacheService, err := InitializeCache(context, config, storageService)
	if err != nil {
		return nil, err
	}
	coordinatorService, err := InitializeCoordinator(context, hubConnector, storageService, cacheService)
	if err != nil {
		return nil, err
	}
	return coordinatorService, nil
}
